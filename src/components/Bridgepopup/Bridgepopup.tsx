/* eslint-disable no-empty-pattern */
/* eslint-disable @typescript-eslint/no-unused-vars */
import React, { useEffect, useLayoutEffect, useMemo, useState } from "react";
import { useToggle } from "don-hooks";
import { useWeb3 } from "don-components";
import { BigNumber } from "bignumber.js";
import {
  getDONBSCbridgeContract,
  DONETHbridge,
  getETHDon,
  getBSCDon,
  getDonPrice,
  toEther,
} from "helpers";
import { DonKeySpinner } from "components/DonkeySpinner";
import { DonCommonmodal } from "components/DonModal";
import styled from "styled-components";
import { useTransactionNotification } from "components/LotteryForm/useTransactionNotification";
import { CircularProgress, makeStyles, Tooltip } from "@material-ui/core";
import { useDidUpdate, useSwitchNetwork } from "hooks";
import { DonBinance, DonEthereum } from "icons";
import { useWeb3Network } from "components/Web3NetworkDetector";
import clsx from "clsx";
import { InterchangeIcon } from "icons/InterchangeIcon";
import axios from "axios";
import { IIconProps } from "icons/interfaces";
import Lottie from "react-lottie";
import ethtoBsc from "./ethtobsc.json";
import bsctoEth from "./bsctoeth.json";
import BgImage from "./success-bg.png";
import donTokenImage from "../../images/token.png";
export const Transfer = (props: { chainId: number }) => {
  const defaultOptions = {
    loop: true,
    autoplay: true,
    animationData: { 1: ethtoBsc, 56: bsctoEth }[props.chainId],
    rendererSettings: {
      preserveAspectRatio: "xMidYMid slice",
    },
  };
  return (
    <Lottie
      width={400}
      style={{ maxWidth: "100%", pointerEvents: "none" }}
      isClickToPauseDisabled
      options={defaultOptions}
    />
  );
};

const ButtonWrapper = styled.div({
  marginRight: "10%",
  width: "40%",
});

const MyBalanceInDON = ({ onDone }: { onDone?: (val: string) => void }) => {
  const [state, setState] = useState({ balance: "", isReady: false });
  const web3 = useWeb3();

  const fetchBalance = async () => {
    try {
      const accounts = await web3.eth.getAccounts();
      //@ts-ignore
      let acceptedToken;
      let balance;
      if ((await web3.eth.getChainId()) == 1) {
        acceptedToken = await getETHDon(web3);
      }
      if ((await web3.eth.getChainId()) == 56) {
        acceptedToken = await getBSCDon(web3);
      }
      if (acceptedToken) {
        balance = await acceptedToken.methods.balanceOf(accounts[0]).call();
      } else {
        balance = 0;
      }
      setState({
        balance: new BigNumber(web3.utils.fromWei(balance, "ether")).toFixed(2),
        isReady: true,
      });
      onDone && onDone(web3.utils.fromWei(balance, "ether"));
    } catch (err) {}
  };
  useLayoutEffect(() => {
    fetchBalance();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  if (!state.isReady) {
    return <>-</>;
  }
  return <>{state.balance} </>;
};

const InputBox = styled.div`
  border: 1px solid #ececec;
  border-radius: 10px;
  display: flex;
  align-items: stretch;
  padding: 15px;
`;

const StyledInput = styled.input`
  font-size: 25px;
  color: #070602;
  border: none;
  background: transparent;
  text-align: right;
  font-weight: 700;
  &:focus-visible {
    outline: none;
  }
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  &[type="number"] {
    -moz-appearance: textfield;
  }
  &:disabled {
    color: #a8a8a8;
  }
`;

const BridgeInput = (props: {
  icon: React.ReactElement;
  value: string;
  className?: string;
  disabled?: boolean;
  placeholder?: string;
  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;
}) => {
  return (
    <InputBox>
      <div style={{ width: 85 }}>{props.icon}</div>
      <StyledInput
        type="number"
        disabled={props.disabled}
        className={clsx("w-100", props.className)}
        placeholder={props.placeholder}
        value={props.value}
        onChange={props.onChange}
      />
    </InputBox>
  );
};

const InputLabel = styled.span`
  font-weight: 600;
  color: #a3a3a3;
  font-size: 14px;
`;

const InputMaxButton = styled.span`
  color: #fac200;
  font-weight: 600;
  font-size: 14px;
  cursor: pointer;
  &:hover {
    text-decoration: underline;
  }
`;

const RenderNetworkIcon = ({ chainId = 1 }) => {
  if (chainId === 1) {
    return <DonEthereum />;
  }
  if (chainId === 56) {
    return <DonBinance />;
  }
  return <DonEthereum />;
};

const ExampleObject = {
  srcChainID: "1",
  destChainID: "56",
  logoUrl:
    "https://assets.coingecko.com/coins/images/15482/small/donkey_logo.jpg",
  name: "Donkey",
  symbol: "DON",
  PairID: "DONv4",
  SrcToken: {
    ID: "ERC20",
    Name: "DONERC20",
    Symbol: "DON",
    Decimals: 18,
    Description: "ERC20 DON",
    DepositAddress: "0x533e3c0e6b48010873B947bddC4721b1bDFF9648",
    DcrmAddress: "0x533e3c0e6b48010873B947bddC4721b1bDFF9648",
    ContractAddress: "0x217ddead61a42369a266f1fb754eb5d3ebadc88a",
    MaximumSwap: 7700000,
    MinimumSwap: 31,
    BigValueThreshold: 1600000,
    SwapFeeRate: 0,
    MaximumSwapFee: 0,
    MinimumSwapFee: 0,
    PlusGasPricePercentage: 10,
    DisableSwap: false,
    IsDelegateContract: false,
    BaseFeePercent: 0,
  },
  DestToken: {
    ID: "DON",
    Name: "Donkey",
    Symbol: "DON",
    Decimals: 18,
    Description: "cross chain bridge DON with DON",
    DcrmAddress: "0x533e3c0e6b48010873B947bddC4721b1bDFF9648",
    ContractAddress: "0x86b3f23b6e90f5bbfac59b5b2661134ef8ffd255",
    MaximumSwap: 7700000,
    MinimumSwap: 310,
    BigValueThreshold: 1600000,
    SwapFeeRate: 0.001,
    MaximumSwapFee: 1600,
    MinimumSwapFee: 31,
    PlusGasPricePercentage: 1,
    DisableSwap: false,
    IsDelegateContract: false,
    BaseFeePercent: 0,
  },
};

const Button = styled.button`
  padding: 12px 70px;
  background: linear-gradient(
      94.22deg,
      rgba(255, 196, 6, 0.2) 7.77%,
      rgba(255, 255, 255, 0) 93.41%
    ),
    #f4e41c;
  border: 1px solid rgba(255, 196, 6, 0.2);
  box-sizing: border-box;
  box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.05);
  border-radius: 10px;
  font-weight: 600;
  font-size: 14px;
  color: #222222;
  &:disabled {
    box-shadow: initial;
    opacity: 0.5;
  }
`;

const DarkButton = styled.button`
  background: linear-gradient(
      94.22deg,
      rgba(255, 255, 255, 0.2) 7.77%,
      rgba(255, 255, 255, 0) 93.41%
    ),
    #000000;
  border: 1px solid #262626;
  box-sizing: border-box;
  padding: 12px 24px;
  box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.05);
  border-radius: 10px;
  font-weight: 600;
  font-size: 14px;
  color: #fff;
  &:disabled {
    box-shadow: initial;
    opacity: 0.5;
  }
`;

const InfoIcon = () => {
  return (
    <svg
      width={13}
      height={16}
      viewBox="0 0 13 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle cx={6.5} cy={6.5} r={6} stroke="#A8A8A8" />
      <path
        d="M6.915 10.219h-.903V4.936h.903v5.283zm-.977-6.685c0-.146.044-.27.132-.37.091-.102.225-.152.4-.152.176 0 .31.05.401.151.091.101.137.225.137.371a.516.516 0 01-.137.366c-.091.098-.225.147-.4.147-.176 0-.31-.049-.4-.147a.527.527 0 01-.133-.366z"
        fill="#A8A8A8"
      />
    </svg>
  );
};

const ViewLimits = styled.span`
  font-weight: 400;
  font-size: 12px;
  color: #a8a8a8;
  display: inline;
  opacity: 0.9;
  cursor: pointer;
  display: flex;
  align-items: center;
  &:hover {
    opacity: 1;
  }
`;

const useStylesBootstrap = makeStyles((theme) => ({
  arrow: {
    color: theme.palette.common.black,
  },
  tooltip: {
    backgroundColor: theme.palette.common.black,
    borderRadius: 10,
  },
}));

const InfoLabel = styled.span`
  font-weight: 600;
  font-size: 12px;
  color: #fff;
  ${(props: { dark?: boolean }) => props.dark && `color: #A8A8A8;`}
`;

const EthereumIcon = (props: IIconProps) => {
  return (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g clipPath="url(#prefix__clip0_ethereum)">
        <path
          d="M8.019 16.037A8.019 8.019 0 108.019 0a8.019 8.019 0 000 16.037z"
          fill="#fff"
        />
        <g clipPath="url(#prefix__clip1_etheruem)">
          <path
            d="M7.778 2.526l-.071.24v6.96l.07.07 3.231-1.91-3.23-5.36z"
            fill="#343434"
          />
          <path d="M7.773 2.526l-3.231 5.36 3.23 1.91v-7.27z" fill="#8C8C8C" />
          <path
            d="M7.789 10.407l-.04.049v2.48l.04.115L11.022 8.5l-3.233 1.908z"
            fill="#3C3C3B"
          />
          <path d="M7.773 13.051v-2.644L4.542 8.5l3.23 4.552z" fill="#8C8C8C" />
          <path d="M7.79 9.8l3.23-1.91-3.23-1.468V9.8z" fill="#141414" />
          <path d="M4.542 7.89l3.23 1.91V6.422L4.543 7.89z" fill="#393939" />
        </g>
      </g>
      <defs>
        <clipPath id="prefix__clip0_ethereum">
          <path fill="#fff" d="M0 0h16v16H0z" />
        </clipPath>
        <clipPath id="prefix__clip1_etheruem">
          <path
            fill="#fff"
            transform="translate(2.526 2.526)"
            d="M0 0h10.526v10.526H0z"
          />
        </clipPath>
      </defs>
    </svg>
  );
};

const BinanceIcon = (props: IIconProps) => {
  return (
    <svg
      width={15}
      height={15}
      viewBox="0 0 15 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g clipPath="url(#prefix__clip0_binance)">
        <path
          d="M7.517 15.035A7.517 7.517 0 107.517 0a7.517 7.517 0 000 15.035z"
          fill="#FBEAC1"
        />
        <path
          d="M5.481 6.624l1.974-1.942 1.974 1.944 1.147-1.131-3.121-3.074-3.122 3.073 1.148 1.13zM2.42 7.518L3.568 6.37l1.147 1.147-1.147 1.146-1.146-1.146zM5.481 8.283l1.973 1.943 1.974-1.944 1.148 1.13-3.121 3.074-3.122-3.072 1.148-1.131zM10.32 7.517l1.147-1.146 1.147 1.145-1.147 1.148-1.147-1.147z"
          fill="#F3BA2F"
        />
        <path
          d="M8.665 7.519L7.518 6.37l-.848.848-.098.097-.2.201 1.146 1.147L8.665 7.52v-.001z"
          fill="#F3BA2F"
        />
      </g>
      <defs>
        <clipPath id="prefix__clip0_binance">
          <path fill="#fff" d="M0 0h15v15H0z" />
        </clipPath>
      </defs>
    </svg>
  );
};

const DonTokenIcon = (props: IIconProps) => {
  return (
    <svg
      width={165}
      height={186}
      viewBox="0 0 165 186"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M82.712 21.954C37.595 21.954 1 58.464 1 103.477S37.595 185 82.712 185c45.117 0 81.712-36.51 81.712-81.523s-36.595-81.523-81.712-81.523z"
        fill="#000"
      />
      <path
        d="M82.712 21.954C37.595 21.954 1 58.464 1 103.477S37.595 185 82.712 185c45.117 0 81.712-36.51 81.712-81.523s-36.595-81.523-81.712-81.523z"
        stroke="#000"
        strokeWidth={0.15}
        strokeMiterlimit={22.926}
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M82.708 27.152c-42.262 0-76.572 34.187-76.572 76.395 0 42.164 34.266 76.396 76.572 76.396 42.262 0 76.571-34.188 76.571-76.396s-34.266-76.395-76.571-76.395z"
        fill="#F4E41C"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M57.325 31.425c-5.71 2.016-11.114 4.646-16.122 7.89a42.901 42.901 0 005.184 3.287c2.24 1.183 4.612 2.542 6.765 4.032l.132.657c.22.965.395 1.973.527 2.98.352 2.148.66 4.34.834 6.531.176 2.104.308 5.304-.306 7.32-1.275 4.076-4.086 6.049-7.557 7.495l2.46-.044c-.659.394-1.274.833-1.845 1.402-1.318 1.272-2.328 2.85-3.12 4.428-1.537 3.068-2.195 6.968-2.063 10.386.087 3.157.79 6.137 2.02 8.898-1.099 2.323-2.152 4.69-3.207 7.057-1.23 2.805-2.548 5.741-3.603 8.678-1.142 3.244-2.108 6.53-3.25 9.774-3.295 9.423-7.776 18.321-19.11 16.919 11.07 20.863 31.499 35.984 55.705 39.797v-.088c.131-3.945-.088-7.845-.527-11.746-.396-3.419-.923-6.794-1.318-10.212-.967-8.678-.484-15.56 2.46-23.844 1.273-3.637 3.91-6.487 7.116-8.503.44-.263 1.098-.657 1.89-1.052 2.152 1.403 4.304 2.674 6.59 3.813 7.292 3.682 15.068 5.698 23.282 5.742 5.931.044 13.751-.438 19.11-3.243 2.856-1.534 5.272-3.901 5.624-7.232.263-2.28-.703-4.339-2.197-6.049-.528-.57-1.054-1.139-1.67-1.622a13.364 13.364 0 00-.921-.701L129.9 114c.087-1.49-.044-3.068-1.055-3.857l-.088-.044c1.318-.394 2.548-1.183 3.295-2.235 1.055-1.534.923-3.901.571-6.005l.484-.394c1.053-.702 2.196-1.841 2.943-2.85 1.713-2.366 2.109-5.083.922-7.757-1.449-3.2-4.525-4.953-7.951-5.917l-.131-.351 1.318-1.49-1.407 1.271a11.316 11.316 0 00-1.054-2.06 8.67 8.67 0 00-.571-.788c.131-.176.22-.395.264-.614v-.176c0-.175.043-.394.043-.613 0-.657-.043-1.271-.132-1.93-.307-1.884-1.273-3.549-3.031-4.47-1.405-.745-3.031-1.052-4.569-.7-.615.13-1.405.394-1.933.789l-.351.263c-2.591-1.14-5.403-2.017-8.215-2.192-2.592-.175-5.272-.22-7.819.087-.835.088-1.89.263-2.725.527l-2.197.7.133-1.972c.088-2.104.132-4.383-.088-6.53-.264-2.06-.527-4.164-.835-6.224-.307-1.797-.702-3.901-1.273-5.873 1.273.087 2.591 0 3.91-.22 3.557-.7 6.457-2.673 7.555-6.223.879-2.937.527-5.085-1.054-7.495-.395 1.885-.922 3.024-1.626 3.857-.703.833-2.064 1.27-3.118 1.446-.44.088-.923.132-1.407.088-1.01-.044-2.02-.307-2.942-.657l.966-1.052a217.955 217.955 0 007.732-8.942 36.597 36.597 0 001.976-2.586c-6.062-1.972-12.476-3.2-19.153-3.594a77.56 77.56 0 00-3.339 5.084 19.6 19.6 0 00-4.481-1.051 19.423 19.423 0 00-3.91 0v-.044l2.68-2.674-3.778.526c-.747.088-1.67.438-2.373.701-1.888.79-3.558 1.929-5.051 3.288a16.688 16.688 0 00-2.022 2.279c-1.186 1.49-2.197 3.112-3.118 4.777 0 .044-.045.044-.045.088-.219-.439-.439-.92-.658-1.359-.836-1.71-1.67-3.419-2.548-5.084-.44-.745-.88-1.534-1.319-2.323z"
        fill="#F6BC12"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M14.637 138.49c12.477 24.107 37.473 40.717 66.38 41.375 0-.307.044-.658.044-.964.132-3.944-.087-7.846-.527-11.747-.396-3.418-.922-6.793-1.318-10.212-.967-8.678-.483-15.515 2.46-23.843 1.274-3.638 3.91-6.487 7.117-8.503 1.186-.745 4.438-2.455 5.843-2.542 2.11 0 6.019-1.491 7.776-2.542 4.92-2.893 6.106-7.32 2.987-12.272-4.7-7.452-16.693-13.15-24.909-15.341-7.6-2.016-16.43-2.586-23.766.79l-.484.218-.22.482c-1.625 3.463-3.25 6.969-4.787 10.476-1.23 2.805-2.549 5.742-3.603 8.677-1.142 3.244-2.109 6.532-3.252 9.775-3.382 9.686-7.995 18.759-19.988 16.787-3.031-.526-6.15-.833-9.225-.57l-.528-.044z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M15.387 139.878c4.393 8.108 10.236 15.296 17.177 21.301a77.353 77.353 0 0021.131 13.017 76.118 76.118 0 0025.92 5.611c0-.307.043-.658.043-1.008.615-17.577-5.974-27.351.703-46.241 3.163-8.854 13.004-12.009 14.365-12.009 1.362 0 15.684-2.85 9.578-12.58-6.107-9.73-30.972-21.257-46.875-14.025 0 0-6.414 13.543-8.303 18.978-4.349 12.404-7.688 30.374-24.865 27.481-2.987-.438-6.018-.745-8.874-.525z"
        fill="#B99D85"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M59.246 129.59s.658 5.216 1.625 7.495a24.225 24.225 0 002.24 4.076s-2.24-1.446-3.294-4.383c-1.01-2.893-.571-7.188-.571-7.188zM57.904 135.658s1.186 3.814 2.02 5.654a83.956 83.956 0 001.274 2.85s-1.142-1.097-2.328-3.551c-1.142-2.498-.966-4.953-.966-4.953zM88.747 44.443c2.988 2.41 6.766 4.296 10.72 3.507 1.405-.263 3.163-1.008 4.173-2.06a129.161 129.161 0 003.339-3.594 217.848 217.848 0 007.731-8.942c2.856-3.462 5.228-7.45 7.161-11.527 1.362-2.849 2.636-5.917 3.559-8.941.439-1.359.79-2.718 1.186-4.076a180.691 180.691 0 001.713-6.575L128.9 0l-2.196.701c-1.713.526-3.691 1.71-5.052 2.805-2.022 1.578-3.998 3.112-5.975 4.778-3.822 3.287-7.512 6.75-11.071 10.3a49.295 49.295 0 00-4.261 4.821c-3.207 4.076-6.063 8.503-8.61 13.061-1.143 2.06-2.328 4.252-3.295 6.4l-.395.92.702.657z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M89.586 43.477s6.81-14.77 15.948-23.887c9.137-9.117 14.585-13.193 16.913-14.99 2.328-1.84 4.657-2.586 4.657-2.586s-1.714 6.838-2.9 10.563c-1.142 3.726-4.656 12.93-10.499 20.03-5.843 7.1-10.983 12.448-10.983 12.448s-4.877 5.04-13.136-1.578z"
        fill="#B99D85"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M126.764 3.352c-.571 2.148-1.713 6.53-2.548 9.248-1.142 3.726-4.656 12.93-10.499 20.03-5.843 7.1-10.983 12.448-10.983 12.448s-1.011 1.008-2.855 1.534c2.679-3.331 6.369-7.89 8.082-9.906 2.856-3.375 6.238-7.495 7.821-12.403 1.581-4.91 1.361-7.495 1.361-7.495s-8.347 11.965-9.269 13.806c-.747 1.49-8.216 12.492-10.807 16.26-.308-.043-.66-.087-1.01-.13l-.748-6.75s4.437-6.005 7.161-10.52c2.679-4.514 7.644-10.43 13.838-14.858 4.657-3.375 8.83-7.758 10.456-11.264z"
        fill="#9E775C"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M97.527 45.036s2.065-6.223 5.579-12.535c3.515-6.311 5.492-8.897 7.864-11.264 2.372-2.367 8.128-6.224 8.128-6.224s-.616.964-1.143 1.622c-.483.657-.835.876-.835.876s-2.152 5.961-2.855 8.197c-.659 2.235-2.856 6.267-4.877 8.283-2.02 2.017-6.458 7.495-7.336 8.723-.922 1.14-1.977 3.594-4.525 2.322z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M99.185 44.038c.307-.832.659-1.665.966-2.454 1.187-2.893 2.504-5.742 4.042-8.503 2.196-3.945 4.437-7.758 7.644-11.001.922-.92 2.065-1.797 3.118-2.63 0 0 .045-.044.089-.044-.263.701-.484 1.403-.747 2.104a94.678 94.678 0 00-1.274 3.77c-.703 2.322-2.856 6.048-4.569 7.757-1.23 1.227-2.416 2.674-3.559 3.989a78.963 78.963 0 00-2.415 2.936c-.527.658-1.055 1.271-1.539 1.929-.35.482-.658 1.008-1.01 1.49-.263.307-.483.57-.746.657z"
        fill="#F6C4B1"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M106.06 80.837c.132-.965.264-2.016.351-2.981.22-2.192.44-4.383.528-6.53.087-2.104.132-4.384-.088-6.531-.264-2.06-.527-4.164-.835-6.224-.528-3.331-1.405-7.67-3.251-10.52a3.923 3.923 0 00-.659-.832c-2.02-2.104-5.36-2.148-7.863-.877-3.559 1.797-5.008 5.61-5.097 9.38-.132 3.9-.395 7.89.44 11.703 1.713 7.714 7.775 11.746 14.805 14.42l1.493.57.176-1.578z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M104.814 80.582s1.406-10.3.746-15.735c-.658-5.391-1.537-12.492-3.909-16.217-2.373-3.726-10.983-2.455-11.29 7.056-.264 9.511-1.494 18.847 14.453 24.896z"
        fill="#B99D85"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M105.471 74.26c.263-3.156.395-6.795.087-9.337-.395-3.243-.878-7.144-1.713-10.519-.658-.394-1.274-.701-1.625-.833-1.23-.438-2.592-.876-2.9-.876-.263.044-1.097.044-1.23.044-.132 0-3.339-.263-4.964 3.9 0 0 .878-.745 2.9-.57 2.02.176 3.91.877 4.744 1.841.834.965 1.01 2.411 1.01 2.411s-1.976-2.542-4.217-2.279c-2.24.263-2.768 1.578-2.768 1.578s1.494-1.096 3.252-.57c1.713.526 2.679 1.929 3.207 2.761.526.833-1.011 10.782-1.011 10.782s2.197 1.973 5.228 1.666z"
        fill="#9E775C"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M134.801 124.872s3.031-7.583 2.548-15.472c-.528-7.889 8.61-15.604 5.272-19.022-3.34-3.463-14.937-3.156-18.891-2.41-3.954.7-27.589 10.825-37.825.394C75.67 77.93 74.22 75.212 74.22 75.212s-9.84-1.402-4.348 18.628c5.492 20.031 23.855 27.35 31.234 30.068 7.425 2.673 28.863 5.829 33.696.964z"
        fill="#E30613"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M131.027 109.045a1.897 1.897 0 00-.791-.394c-.615-.176-1.273-.263-1.889-.351a32.74 32.74 0 00-2.899-.395c-1.099-.087-2.328-.175-3.427-.044-1.318.132-2.416.746-3.207 1.842-.132.174-.263.394-.395.613-.484-.877-1.142-1.447-2.46-1.885-.352-.131-.835-.175-1.231-.219a24.902 24.902 0 00-1.8-.175c-1.582-.132-3.164-.176-4.745-.263-2.592-.088-5.14-.176-7.732-.22-.966 0-1.933-.043-2.855-.131-2.02-.176-4.086-.481-6.063-1.008-1.626-.438-3.382-1.052-4.744-2.016-1.758-1.271-3.69-2.41-5.711-3.2-.659-.262-1.538-.525-2.241-.613l-.966-.088-.045.964c0 .527 0 1.096.089 1.666.131 1.315.35 2.673.703 3.945 1.054 3.901 3.118 7.363 6.413 9.817 2.021 1.535 4.394 2.806 6.678 3.858 3.075 1.402 6.326 2.585 9.621 3.549 1.493.439 3.031.877 4.524 1.272l.528.132.351-.439c.66-.789 1.407-1.929 1.802-2.892.044-.176.131-.351.176-.527.087.22.219.438.35.701.352.702.923 1.753 1.494 2.28l.219.219 5.888.745.307-.394c.703-.877 1.406-2.105 1.845-3.113.044-.131.132-.307.176-.438.439.921.967 1.753 1.625 2.367.44.394 1.845 1.797 2.416 1.972l.308.088.307-.088c.66-.219 1.275-.438 1.889-.657.44-.176.879-.307 1.275-.482.395-.176.922-.35 1.098-.789.176-.351.395-.702.571-1.052.263-.526.528-1.052.747-1.622.219.701.527 1.359.834 1.929 1.582 2.804 4.438 3.068 6.371.438.351-.526.703-1.096 1.01-1.622a24.152 24.152 0 001.801-3.726c.264-.701.439-1.402.571-2.103.308-1.709.879-4.997-.746-6.268-.176-.131-.308-.262-.484-.394-.878-.745-1.977-1.008-3.075-1.227-.879-.176-1.933-.395-2.855-.351-.572-.088-1.318.088-1.626.789z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M135.8 123.338s2.636-3.726 3.25-7.101c.615-3.331.308-4.821-.395-5.391-.747-.57-.79-.964-3.163-1.446-2.372-.526-3.47-.439-3.646.088-.176.525-.483 2.717-.703 3.681-.22.965-1.098 2.893-1.098 2.893s.483-1.972.615-3.594c.132-1.622.352-2.673-.659-2.937-.967-.263-5.36-1.051-7.864-.788-2.503.262-3.25 2.454-3.25 3.418 0 .965-.176 4.033-.176 4.033s-.22-2.937-.571-4.165c-.352-1.226-.66-2.191-2.417-2.717-1.757-.569-15.199-.832-15.199-.832s-9.534 0-14.19-3.331c-4.657-3.332-7.513-3.639-7.513-3.639s-.308 9.293 6.81 14.684c7.117 5.347 20.515 8.502 20.515 8.502s1.187-1.402 1.626-2.63c.439-1.226.879-2.936.879-2.936s.571 1.49 1.318 3.025c.746 1.489 1.317 2.06 1.317 2.06l5.096.613s1.011-1.271 1.758-2.937c.747-1.665 1.054-2.893 1.054-2.893s.44 2.85 2.197 4.515c1.756 1.666 2.108 1.797 2.108 1.797s3.646-1.228 3.734-1.402c.088-.22.878-1.447 1.625-3.375.747-1.929.879-2.148.879-2.148s.044 2.455 1.275 4.689c1.142 2.149 3.25 2.367 4.788.264z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M140.066 93.617c-.264-.832-1.098-1.709-1.758-2.234-2.108-1.579-5.051-1.93-7.6-1.798l-.658.044-.176.657c-.176.614-.263 1.36-.308 2.016a15.082 15.082 0 00.308 4.646c.351 1.578.658 3.2.966 4.778.396 2.104.791 4.208 1.142 6.356l.044.306.22.219c.879.789 2.24 1.446 3.382 1.709 2.285.571 5.404-.438 6.766-2.41 1.494-2.192.615-6.136-.044-8.503-.175-.57-.351-1.183-.571-1.754-.483-1.358-1.098-2.717-1.713-4.032z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M130.778 90.5s-.747 2.892 0 6.224c.747 3.331 2.109 11.177 2.109 11.177a7.8 7.8 0 002.987 1.533c1.757.439 4.569-.263 5.799-2.06 1.23-1.753.527-5.259-.132-7.757-.703-2.454-2.284-5.654-2.284-5.654s-1.099-3.813-8.479-3.463z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M124.417 90.775c-1.494-.35-3.031-.132-4.437.526-.878.394-2.021 1.184-2.548 2.06-.659 1.14-.703 4.076-.703 5.435 0 2.674-.131 8.459 1.23 10.606.439.701.923 1.315 1.582 1.842 1.757 1.402 4.173 1.315 6.281 1.051 1.802-.263 6.063-1.008 6.722-3.155.132-.526.132-1.36.088-1.885-.044-.877-.088-1.797-.176-2.674-.131-1.139-.263-2.41-.526-3.506-.265-1.052-.528-2.148-.836-3.2-.351-1.227-.878-2.761-1.581-3.857-.879-1.359-3.426-2.63-4.92-3.2l-.044-.043h-.132z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M124.212 91.648s3.559 1.403 4.482 2.893c.966 1.446 1.801 4.777 2.284 6.75.484 1.972.879 6.749.615 7.583-.263.876-1.933 1.928-5.974 2.497-4.042.571-5.667-.394-6.942-2.454-1.274-2.06-1.098-9.467-1.098-10.124 0-.701.044-4.032.616-4.997.614-1.008 3.162-2.806 6.017-2.148z"
        fill="#FDE100"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M124.19 91.648s2.681 1.053 3.998 2.323c-2.153 0-5.579.307-6.853 2.148-1.714 2.454-1.054 11.176 1.933 15.385-2.372-.089-3.603-1.009-4.613-2.587-1.274-2.06-1.098-9.467-1.098-10.124 0-.701.044-4.032.615-4.997.615-1.008 3.163-2.806 6.018-2.148z"
        fill="#FAC200"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M118.615 109.835c-.087-1.534-.176-3.113-.308-4.646-.087-.877-.131-1.709-.219-2.586a13.851 13.851 0 00-.264-1.885c-.395-1.753-.614-2.718-1.757-4.164-.703-.92-1.889-1.796-3.031-2.147-1.801-.701-3.778-.921-5.536-.088-1.142.526-2.152 1.49-2.636 2.673-.176.439-.307 1.008-.439 1.622-.571-.745-1.405-1.49-2.108-1.972-1.01-.658-2.241-1.183-3.471-.965-1.845.351-3.558 1.184-4.525 2.85-.307.525-.571 1.183-.79 1.796-.703-1.315-1.582-3.024-2.592-3.856-1.45-1.184-3.91-1.008-5.14.394a2.54 2.54 0 00-.484.658c-.132-.57-.263-1.184-.44-1.753l-.526-1.842c-.089-.307-.176-.657-.308-1.008-.22-.525-1.054-.964-1.538-1.183-.878-.35-1.845-.482-2.767-.219-.79.175-1.538.526-2.109 1.14-.395.394-.615.832-.922 1.314-.703 1.008-1.23 3.463-1.362 4.733-.044.527-.132 1.053-.176 1.622a13.96 13.96 0 000 2.718c.264 2.455 1.274 4.646 3.207 6.268 1.098.92 2.944 2.323 4.525 2.103.527-.087.922-.307 1.186-.569.351.351 1.01.658 1.362.876 1.318.658 5.272 1.359 6.766 1.359.966 0 1.933-.219 2.547-.789.176.394.483.745.835.965.747.525 1.67.701 2.548.744 1.01.044 2.109 0 3.119-.087.879-.087 1.758-.176 2.636-.351.659-.132 1.626-.35 1.933-1.095.044-.132.088-.263.132-.439.308.394.659.745.966.921.703.35 1.802.35 2.592.35 1.581-.043 3.207-.219 4.745-.394 1.23-.132 3.031-.483 3.865-1.446.397-.527.616-1.097.484-1.622z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M112.799 95.243s1.581.525 2.592 1.884c1.054 1.36 1.23 2.103 1.582 3.814.395 1.709.79 9.072.79 9.072s.528 1.446-3.558 1.928c-4.086.483-6.063.527-6.853.132-.791-.394-2.021-2.937-2.021-2.937s-.088 2.323-.307 2.981c-.265.657-4.833 1.052-6.766.964-1.933-.088-2.636-.964-2.68-1.447-.044-.481-.132-2.06-.22-3.593-.044-1.578-.044-1.709-.044-1.709s-.658 2.98-.658 4.163c0 1.184-.967 1.666-2.373 1.666-1.405 0-5.272-.745-6.326-1.272-1.054-.525-1.186-.745-1.186-.745s-.44-.788-.395-2.323c.088-1.489.088-2.016.088-2.016s-.528 1.184-.704 2.148c-.131.964-.087 1.972-.087 1.972s-.66 2.016-4.613-1.315c-3.954-3.331-2.856-8.546-2.724-9.818.132-1.27.703-3.55 1.23-4.295.527-.789.88-1.666 2.548-2.06 1.626-.394 3.164.658 3.251.877.088.22 1.186 3.769 1.362 5.128.132 1.36.044 2.279.044 2.279s.967-2.06 1.933-3.2c.967-1.095 2.856-1.14 3.866-.307 1.01.834 2.153 3.244 2.636 4.121.483.876.614 1.622.614 1.622s.836-2.85 1.45-3.945c.615-1.097 1.802-2.016 3.91-2.41 2.066-.396 4.437 2.059 5.052 3.11.616 1.053.967 2.324.967 2.324s.088-3.244.659-4.646c.484-1.49 2.768-3.813 6.941-2.147z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M97.818 60.097c-3.294-.131-5.975 2.805-5.975 6.575-.043 3.725 2.592 6.88 5.888 6.969 3.294.131 5.974-2.805 5.974-6.575 0-.57-.044-1.14-.176-1.665 0 0-.307-3.507-1.449-5.479-1.187-1.972-3.076-2.016-3.56-2.104-.482-.087-1.58 0-2.37.439-.792.394-.836.832-.836.832s1.186-1.008 3.075-.701c1.889.307 2.768 1.227 3.164 2.148.263.613.439 1.27.482 1.665-1.098-1.227-2.591-2.016-4.217-2.104z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M97.792 60.844c-2.81-.087-5.139 2.542-5.183 5.873-.044 3.332 2.24 6.137 5.052 6.224 2.812.088 5.14-2.541 5.184-5.873.044-3.33-2.197-6.136-5.053-6.224z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M97.238 63.428c-1.625-.043-2.943 1.403-2.987 3.288-.044 1.84 1.274 3.418 2.899 3.462 1.625.044 2.943-1.402 2.988-3.287 0-1.84-1.318-3.419-2.9-3.463z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M96.976 65.301c-.439 0-.834.482-.878 1.14 0 .614.352 1.14.79 1.14.44 0 .835-.483.88-1.14 0-.658-.352-1.14-.792-1.14z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M57.111 71.659l2.46-.045c-.658.396-1.274.834-1.845 1.404-1.318 1.27-2.328 2.848-3.12 4.426-1.536 3.068-2.196 6.97-2.107 10.388.176 5.566 2.284 10.607 5.71 14.945 3.647 4.515 8.523 7.934 13.795 10.257 1.757.789 3.559 1.49 5.403 2.016.747.22 1.494.438 2.241.57l1.318.263c1.537 1.665 3.119 3.112 4.525 3.988.614.351 1.186.79 1.757 1.184.879.614 1.713 1.183 2.592 1.796 2.416 1.622 4.876 3.113 7.468 4.383 7.293 3.682 15.068 5.698 23.284 5.743 5.93.044 13.75-.439 19.11-3.244 2.856-1.534 5.271-3.901 5.623-7.232.264-2.279-.703-4.339-2.196-6.049-.528-.569-1.055-1.139-1.67-1.621-.219-.219-.659-.526-.923-.702l-1.142-.701c-.527 2.806-1.186 5.128-2.548 7.32l-.439.351c-.088.043-.132.043-.176.043-1.099.307-2.241.57-3.338.834-.352.087-.703.131-1.055.218-.747.132-1.537.22-2.328.307-2.46.307-4.965.439-7.469.483-7.072.087-14.409-.79-21.13-3.113-9.753-3.375-18.188-8.415-22.8-17.97-.616-1.271-1.143-2.63-1.627-3.944-1.405-4.076-2.24-8.46-2.547-12.8v-.262c0 .044 0 .044.044.088 1.098 4.032 3.25 7.67 6.633 10.169 6.503 4.864 14.234 5.347 21.922 3.813 1.845-.351 3.691-.877 5.535-1.359 2.329-.614 4.613-1.27 6.941-1.929 2.065-.57 4.13-1.095 6.239-1.622 1.669-.394 3.426-.788 5.139-1.008 2.725-.35 5.624-.394 8.347 0 1.187.176 2.549.439 3.822.921l.923.964c.395.614.879 1.403 1.142 2.104.44 1.184.835 2.41 1.187 3.638l.482 1.578 1.099-.877c1.055-.701 2.197-1.84 2.944-2.848 1.713-2.367 2.108-5.085.921-7.758-1.449-3.2-4.524-4.953-7.951-5.917l-.176-.483c-.263-.745-.702-1.534-1.097-2.147a8.763 8.763 0 00-.572-.79c.132-.175.22-.394.264-.613v-.176c0-.174.043-.394.043-.612 0-.658-.043-1.272-.131-1.93-.308-1.884-1.274-3.55-2.987-4.426-1.407-.746-3.031-1.052-4.614-.701-.614.13-1.405.394-1.932.789l-.352.263c-2.591-1.14-5.403-1.973-8.215-2.192-2.592-.175-5.272-.22-7.819.087-.835.089-1.889.264-2.724.527l-2.548.788c-.176.044-.352.044-.527.088l-1.143-.262c-2.46-.614-6.194-2.06-7.995-3.902-2.108-2.147-3.076-6.048-3.119-8.985 0-1.315.132-2.63.44-3.857.439-1.578 1.318-2.892 2.767-3.681.571-.307 1.406-.614 2.065-.658l1.977-.131c2.504.7 5.095.964 7.687.438 3.559-.701 6.503-2.674 7.557-6.224.878-2.936.527-5.084-1.054-7.495-.397 1.885-.923 3.025-1.626 3.857-.703.833-2.065 1.271-3.12 1.447-.482.087-.921.131-1.405.087-1.889-.087-3.778-.964-5.448-1.84-2.108-1.184-4.041-2.543-6.106-3.77-1.055-.614-2.197-1.227-3.339-1.71.22 0 .44.044.659.088 1.23.176 2.548.439 3.735.79l5.446 1.49-4.26-3.682c-.791-.701-1.89-1.359-2.812-1.885-2.197-1.183-4.612-2.016-7.117-2.235a19.423 19.423 0 00-3.91 0h.044l2.68-2.674-3.735.526c-.746.088-1.668.438-2.371.701a17.588 17.588 0 00-5.053 3.288 16.675 16.675 0 00-2.02 2.279c-1.187 1.49-2.197 3.112-3.119 4.777 0 .044-.044.044-.044.088-.22-.438-.44-.92-.66-1.359-.834-1.71-1.668-3.419-2.547-5.084a55.952 55.952 0 00-2.549-4.47c-.747-1.184-1.625-2.455-2.636-3.42-1.317-1.227-3.118-2.366-4.656-3.287a104.202 104.202 0 00-6.546-3.637c-3.118-1.622-6.37-3.2-9.62-4.603-2.285-.964-4.745-1.972-7.117-2.586-1.274-.35-3.251-.789-4.35.176-1.274 1.14-.351 3.418.22 4.69 1.01 2.191 2.417 4.426 3.866 6.399 1.758 2.41 3.734 4.777 5.755 7.012 2.68 2.893 5.535 5.654 8.655 8.109 2.108 1.665 4.393 3.2 6.765 4.47 2.24 1.184 4.613 2.543 6.765 4.033l.132.657c.22.965.396 1.973.528 2.98.35 2.148.658 4.34.834 6.531.176 2.104.308 5.304-.308 7.32-1.318 4.12-4.085 6.048-7.6 7.538z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M72.106 43.1s2.636-5.786 6.063-8.985c3.426-3.244 6.72-3.682 6.72-3.682s-1.581 1.578-2.064 2.367c-.483.789-.439 1.052-.439 1.052s1.845-1.797 7.204-1.271c5.404.526 9.182 3.813 9.182 3.813s-3.383-.92-5.755-.964c-2.372-.044-3.603 1.621-3.603 1.621s2.504-.394 7.293 2.499c4.789 2.893 9.182 6.53 13.839 5.698 4.612-.833 4.568-3.507 4.568-3.507s1.626 7.758-6.809 9.467c-8.479 1.71-16.65-5.61-18.802-7.231-2.197-1.578-5.316-2.762-8.26-2.674-2.943.088-3.953 1.227-3.953 1.227s2.811-1.096 6.81.044c3.996 1.14 4.875 2.367 6.5 3.55 1.626 1.184 3.34 2.455 5.272 3.375a103.71 103.71 0 002.944 1.359s-4.612.263-5.975 5.303c-1.362 5.04.176 11.22 2.987 14.07 2.769 2.849 8.611 4.25 8.611 4.25s-2.285 1.754-2.46 4.077c-.175 2.28 1.274 3.726 1.274 3.726s-1.23-4.515.703-6.225c1.889-1.709 3.47-1.665 5.93-.963 2.46.7 5.491 2.498 5.491 2.498s-.351-.92-1.756-1.929c-1.406-.964-4.306-1.84-4.306-1.84s3.339-1.052 10.105-.57c6.764.482 13.178 5.084 13.178 5.084s-.878-1.27-2.064-2.191c-1.186-.921-1.757-1.14-1.757-1.14s2.153-1.578 5.228 0c3.031 1.578 2.416 5.917 2.416 5.917l-1.582-.483s1.45 1.754 2.065 2.675c.615.92.966 1.884.966 1.884s-5.052-1.14-10.411-.57c-5.36.57-8.391 2.236-8.391 2.236s6.326-1.446 11.422-1.403c5.096.044 13.136.92 15.508 6.268 2.416 5.347-3.383 9.029-3.383 9.029s-.834-2.586-1.23-3.638c-.395-1.052-1.274-2.41-1.274-2.41s1.186.57 2.109 1.226c.922.658 1.185 1.096 1.185 1.096s.308-.876-2.503-2.76c-2.812-1.886-8.61-2.762-14.805-1.974-6.238.79-18.583 4.822-23.898 5.918-5.316 1.051-13.663 1.84-20.912-3.595-7.248-5.39-6.94-14.945-6.94-14.945s.922.087 1.668.7c.792.614.923 1.272.923 1.272s.395-1.49-2.109-2.673c-2.503-1.184-6.062 1.577-6.062 1.577s1.055-.35 2.065-.614c1.055-.262 1.669-.087 1.669-.087s-.659 9.336 2.724 18.978c3.339 9.643 9.972 17.445 25.216 22.704 15.244 5.259 31.323 2.498 32.685 2.148 1.362-.351 4.833-1.052 6.327-2.06 1.449-.964 1.273-1.929 1.273-1.929s-.527.57-1.23 1.052c-.703.483-1.845 1.008-1.845 1.008s1.318-2.717 1.669-3.989l.571-2.059s4.569 2.98 4.085 7.056c-.438 4.076-4.963 9.467-23.458 9.38-18.495-.088-30.576-10.563-34.442-12.93-3.91-2.366-9.358-9.906-12.081-14.288-2.68-4.383-3.823-7.101-3.823-7.101s1.275 4.383 3.296 7.933c1.976 3.55 6.325 9.029 6.325 9.029s-12.827-2.585-20.691-12.448c-7.908-9.861-5.491-20.03-3.514-23.974 1.977-3.945 3.866-5.04 5.447-5.917 1.582-.877 3.998-.965 3.998-.965s-1.406-.525-2.46-.481c-1.054.043-1.89.57-1.89.57s3.515-1.623 5.096-6.707c1.583-5.084-1.01-17.488-1.01-17.488l3.075 1.797s-1.493-2.498-10.63-7.32c-9.138-4.864-17.31-14.507-20.736-19.197-3.383-4.69-5.14-8.59-4.262-9.336.879-.745 4.261.176 10.149 2.63 5.843 2.455 17.132 8.196 20.427 11.264 3.383 2.937 7.688 13.15 9.314 16.086z"
        fill="#B99D85"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M72.161 42.944c.351-.789 2.856-5.873 5.975-8.853l.044-.044c3.426-3.243 6.722-3.682 6.722-3.682s-1.583 1.578-2.065 2.367c-.484.789-.44 1.052-.44 1.052s1.845-1.797 7.205-1.271c1.45.131 2.767.482 3.91.877.44.131.835.306 1.186.482 1.582.7 2.811 1.49 3.47 1.972.396.307.615.482.615.482s-.306-.087-.79-.219c-.967-.22-2.68-.614-4.174-.701-.264 0-.527-.044-.746-.044-.264 0-.484 0-.704.044-1.889.263-2.9 1.578-2.9 1.578s.66-.088 1.934.175c.352.087.791.175 1.274.35.923.307 2.02.79 3.338 1.49.265.132.528.307.792.483.79.482 1.537.964 2.284 1.446.352.22.747.482 1.099.702.087.087.219.13.307.219.132.087.264.175.395.219.352.219.747.438 1.098.657.264.132.484.307.747.438.396.22.835.439 1.23.658.396.22.791.395 1.23.57 1.846.789 3.646 1.183 5.492.833 4.612-.833 4.569-3.507 4.569-3.507s1.625 7.758-6.81 9.467a13.974 13.974 0 01-4.041.176c-.484-.044-.966-.132-1.45-.22-2.988-.57-5.798-1.972-8.04-3.374-.087-.044-.175-.132-.263-.176l-1.186-.789c-1.538-1.052-2.768-2.06-3.514-2.63-.132-.087-.22-.175-.308-.218-2.197-1.578-5.316-2.762-8.259-2.674-2.153.044-3.251.701-3.734 1.008-.79.175-1.319.263-1.319.263s1.363-1.447 2.593-2.367c1.23-.92 3.778-1.753 3.778-1.753s-3.338.263-5.711 1.446c-2.46 1.184-4.833 3.068-4.833 3.068z"
        fill="#525251"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M88.314 52.538s-1.757-3.726-8.302-4.164c-6.502-.439-7.644 1.402-8.962 3.638-1.275 2.279-1.362 5.26-.923 6.75.44 1.533 1.406 2.06 1.406 2.06s4.437-5.61 8.128-7.057c3.733-1.403 5.447-1.753 8.653-1.227zM103.915 76.125l.132-.132c1.053-.964 2.021-1.358 3.075-1.402-.308.614-1.143 1.709-3.207 1.534zM93.69 48.206c.704.439 1.45.877 2.24 1.272a103.71 103.71 0 002.944 1.358s-4.613.263-5.974 5.304c-1.362 5.04.176 11.22 2.987 14.069 2.767 2.85 8.61 4.252 8.61 4.252s-.79.613-1.45 1.577c-2.899-.7-6.677-3.462-8.83-5.83-2.328-2.541-3.206-9.86-2.635-14.813.35-3.2 1.405-5.742 2.108-7.189zM66.326 62.214c.527-5.785-1.45-15.121-1.45-15.121l3.075 1.797s-1.493-2.498-10.632-7.32c-9.137-4.865-17.308-14.507-20.734-19.197-3.383-4.69-5.14-8.59-4.262-9.336.22-.175.527-.263 1.055-.263.395 1.71 1.098 3.638 2.503 4.865 2.944 2.586 10.236 6.487 10.236 6.487s17.617 15.077 18.89 15.954c1.275.92 2.944 2.41 4.087 5.917 1.142 3.507-.528 8.547-.528 8.547l-.527-3.55c.044-.088-.088 6.355-1.713 11.22zm8.39 34.45c.176.613.396 1.227.615 1.841 3.34 9.643 9.973 17.444 25.217 22.704 1.713.569 3.427 1.096 5.14 1.49a663.298 663.298 0 016.545 8.371c-13.75-2.497-22.8-10.168-26.05-12.184-3.91-2.367-9.358-9.906-12.082-14.289-2.68-4.383-3.821-7.1-3.821-7.1s1.273 4.383 3.294 7.933c1.978 3.55 6.327 9.029 6.327 9.029s-12.828-2.586-20.692-12.448c-7.908-9.861-5.492-20.03-3.514-23.974 1.976-3.945 3.865-5.041 5.447-5.918 1.58-.876 3.998-.964 3.998-.964s-1.406-.525-2.46-.482c-1.055.044-1.89.57-1.89.57s1.362-.613 2.768-2.323c.879-.175 1.977-.395 3.426-.57 3.954-.526 5.887.307 5.887.307s1.406-6.355 4.174-7.89c2.767-1.533 6.106-.13 6.106-.13s-.571-1.447-1.845-1.842c-1.274-.394-3.559.044-3.559.044s2.197-1.665 4.614-1.096c2.372.57 3.557.482 5.227 7.495 1.67 7.013-1.976 10.607-2.855 11.264-.879.658 1.757 2.762-.352 2.674-2.109-.088-7.38-4.251-10.147-6.399-2.725-2.191-5.712-3.506-11.818 2.849-6.063 6.312-3.295 16.349-.352 21.038 2.944 4.69 11.642 10.739 11.642 10.739s-1.537-2.762-2.548-5.392c-1.01-2.63-1.45-7.8-1.45-7.8s2.109.963 5.008 2.454z"
        fill="#9E775C"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M103.329 75.654c-.571.746-1.186 1.71-1.274 2.849-.175 2.28 1.274 3.726 1.274 3.726s-1.23-4.514.703-6.224c1.889-1.71 3.471-1.665 5.931-.964 2.46.7 5.491 2.498 5.491 2.498s-.351-.92-1.757-1.929c-1.406-.964-4.306-1.84-4.306-1.84s3.339-1.052 10.105-.57c6.766.483 13.179 5.084 13.179 5.084s-.878-1.27-2.064-2.191c-1.187-.921-1.758-1.14-1.758-1.14s2.153-1.577 5.228 0c3.031 1.578 2.416 5.917 2.416 5.917l-1.582-.482s1.45 1.753 2.065 2.673c.615.921.966 1.885.966 1.885s-5.051-1.14-10.411-.57c-5.359.57-8.391 2.236-8.391 2.236s6.326-1.446 11.422-1.403c5.096.044 13.136.92 15.508 6.268 2.416 5.348-3.383 9.029-3.383 9.029s-.834-2.586-1.23-3.638c-.395-1.051-1.274-2.41-1.274-2.41s1.186.57 2.109 1.226c.922.658 1.187 1.096 1.187 1.096s.306-.876-2.505-2.76c-2.811-1.885-8.61-2.762-14.805-1.974-6.238.79-18.582 4.822-23.898 5.918-5.316 1.052-13.662 1.84-20.912-3.595-7.248-5.39-6.94-14.945-6.94-14.945s.923.088 1.669.7c.79.615.922 1.273.922 1.273s.395-1.49-2.108-2.675c-2.504-1.183-6.063 1.578-6.063 1.578s1.055-.35 2.065-.614c1.055-.262 1.669-.087 1.669-.087s-.659 9.336 2.724 18.979c3.339 9.642 9.972 17.444 25.217 22.704 15.244 5.258 31.322 2.497 32.684 2.147 1.362-.351 4.833-1.052 6.327-2.06 1.449-.964 1.273-1.929 1.273-1.929s-.527.57-1.23 1.052c-.703.483-1.845 1.008-1.845 1.008s1.318-2.717 1.67-3.988c.351-1.271.571-2.06.571-2.06s4.568 2.98 4.086 7.056c-.44 4.076-4.965 9.467-23.46 9.38-18.495-.088-30.576-10.563-34.442-12.929-3.426-2.105-8.083-8.197-10.982-12.624-1.318-2.235-2.768-4.646-3.823-6.575-.746-1.446-1.054-2.234-1.054-2.234l.044.131c-1.933-4.558-4.92-14.858-1.494-19.68 3.954-5.566 9.665 1.402 12.872 2.06 3.207.657 8.83 2.016 16.562-2.104 1.494-.876 3.251-1.62 5.052-2.279z"
        fill="#F2E2CF"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M142.889 118.311c.791 1.139 1.362 2.542 1.187 4.12-.44 4.076-4.965 9.467-23.459 9.379-18.496-.087-30.577-10.563-34.442-12.93-2.11-1.271-4.657-4.076-7.03-7.056 1.187.877 2.548 1.885 4.042 2.937 8.523 6.092 9.62 6.179 14.101 8.415 4.482 2.235 26.579 8.24 37.738 4.076 6.326-2.454 7.819-6.18 7.863-8.941zm-72.882-38.44c.308-.086.615-.175.967-.262 1.055-.263 1.67-.087 1.67-.087s-.572 8.195 2.108 17.137c-.615-1.315-1.186-2.85-1.538-4.427-.966-4.383-1.756-10.782-2.328-11.79a1.172 1.172 0 00-.879-.57zm7.074 1.009c-.088-.526-.44-1.447-2.153-2.235-1.889-.92-4.393.482-5.492 1.184-.439 0-.79.131-.79.131s2.724-3.813 6.501-2.191c3.778 1.621 3.823 4.908 3.823 4.908s-.22-.57-1.274-1.446c-.263-.176-.44-.263-.615-.351zm69.542 13.938c-.483 3.419-3.91 5.61-3.91 5.61s-.834-2.585-1.229-3.638c-.396-1.052-1.275-2.41-1.275-2.41s1.186.57 2.109 1.227c.923.658 1.187 1.096 1.187 1.096s.307-.877-2.505-2.761c-2.812-1.885-8.61-2.761-14.805-1.973-6.238.79-18.582 4.821-23.898 5.918-5.315 1.05-13.662 1.84-20.912-3.595-7.248-5.391-6.94-14.946-6.94-14.946s.923.087 1.67.701c.35.263.526.526.658.746-.571-.176-.923.087-.923.087s-.44.526-.087 1.753c.352 1.272 2.372 6.18 5.49 8.81 3.076 2.63 10.633 6.97 20.385 4.208 9.709-2.761 26.007-7.89 34.617-5.918 5.14 1.14 8.479 3.42 10.368 5.085zm-11.07-13.674c.483.57 1.098 1.358 1.449 1.884.615.92.967 1.885.967 1.885s-5.052-1.14-10.412-.57c-2.812.306-4.964.877-6.369 1.402-2.68.526-4.482 1.052-4.482 1.052s4.13-2.06 9.665-3.901c4.437-1.49 7.908-1.71 9.182-1.752zm-3.119-6.795c.527.089 1.054.307 1.669.57 3.031 1.578 2.417 5.918 2.417 5.918l-1.055-.307-1.713-1.71s.703-.526.263-2.06c-.22-.789-.922-1.665-1.581-2.41zm-16.342 7.013s-3.339-4.908-7.381-5.04c-4.042-.131-4.657 3.024-4.481 4.602.219 1.578 1.494 2.717 1.494 2.717s8.171 1.622 10.368-2.279z"
        fill="#EDC9A2"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M115.12 81.071s-2.372-3.068-5.887-3.55c-3.515-.526-3.954 2.41-4.086 3.287-.131.921 1.099 2.148 1.099 2.148v-1.622s1.758 1.009 3.866.614c2.065-.394 2.899-1.622 2.899-1.622s1.318.22 2.109.745zM87.557 51.288s-3.295-4.163-9.27-4.12c-5.974.044-7.512 6.53-7.425 8.109.089 1.578.923 4.514.923 4.514s1.142-3.375 6.195-6.881c5.052-3.462 8.83-1.71 9.577-1.622zM68.446 44.52s-1.8-4.909-4.349-8.415c-2.547-3.55-5.535-7.276-12.169-10.826-6.633-3.55-14.146-5.742-14.146-5.742s.528 1.008 1.538 1.403c1.055.394 1.45.833 1.45.833s4.041 5.698 6.985 8.327c2.944 2.63 8.479 7.276 12.257 9.555a517.864 517.864 0 008.434 4.865z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M42.99 22.656c2.81 1.096 5.623 2.323 8.303 3.726 2.679 1.402 5.14 3.112 7.337 5.215 1.668 1.622 3.03 3.375 4.392 5.26.307.438.615.92.923 1.359a30.377 30.377 0 011.801 3.33c-1.714-1.007-3.427-1.971-5.14-3.023-2.02-1.228-3.998-2.718-5.887-4.208a142.295 142.295 0 01-6.15-5.172c-.967-.877-1.89-1.885-2.724-2.893a78.728 78.728 0 01-2.855-3.594s.043.044 0 0z"
        fill="#F6C4B1"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M81.008 60.27c-3.646 0-6.59 3.77-6.59 8.459 0 4.645 2.944 8.459 6.59 8.459s6.59-3.77 6.59-8.459c0-.701-.088-1.403-.22-2.06 0 0-.351-4.383-1.67-6.794-1.317-2.41-3.425-2.367-3.997-2.454-.527-.044-1.757.087-2.635.657-.836.57-.923 1.096-.923 1.096s1.318-1.315 3.383-1.052c2.108.263 3.075 1.403 3.514 2.542.307.745.483 1.578.571 2.06-1.143-1.49-2.812-2.454-4.613-2.454z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M80.993 61.18c-3.118 0-5.667 3.375-5.667 7.54 0 4.163 2.549 7.538 5.667 7.538 3.12 0 5.668-3.375 5.668-7.539s-2.548-7.539-5.668-7.539z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M80.817 63.419c-1.801 0-3.251 1.797-3.251 4.032 0 2.235 1.45 4.032 3.251 4.032 1.8 0 3.25-1.797 3.25-4.032 0-2.191-1.45-4.032-3.25-4.032z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M80.737 64.87c-.527 0-.923.525-.923 1.139 0 .613.396 1.14.923 1.14s.922-.527.922-1.14c0-.658-.44-1.14-.922-1.14z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M83.018 79.599s.44-.964-1.845-4.427c-2.284-3.419-6.766-5.04-8.523-5.566-1.757-.483-3.602-.483-4.305-.132-.702.307-.702 3.2 3.252 4.91 3.952 1.708 5.666 2.54 7.116 3.374 1.494.833 3.646 2.41 4.305 1.84z"
        fill="#B99D85"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M82.939 78.832c-.132-.657-.615-1.798-1.801-3.594-2.285-3.42-6.766-5.041-8.523-5.567-1.757-.482-3.602-.482-4.305-.131-.352.175-.528.92-.176 1.84 2.548-.92 4.35.089 6.062 1.447 2.285 1.797 6.24 4.91 8.743 6.005z"
        fill="#9E775C"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M83.052 79.013s-.352-4.295-5.097-7.539c-4.788-3.243-8.786-2.147-8.786-2.147s8.786 0 13.883 9.686z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M73.74 73.475s-.219-1.709-2.504-2.541c-2.284-.79-3.25-.263-3.25-.263s3.91.832 5.754 2.804zM71.79 73.87s-.309-1.36-2.637-1.929c-2.328-.57-2.768.22-2.768.22s3.383.35 5.404 1.709zM67.286 73.871s-.834-.789-1.669-.482c-.79.307-1.01.92-1.01.92s1.757-.57 2.68-.438zM104.219 54.277s-.219-2.41-3.602-3.112c-3.383-.701-5.36 1.447-6.063 2.236-.703.788-1.23 2.191-1.361 2.892-.132.745-.264 1.228-.264 1.228s.967-2.762 4.745-2.762 6.106 4.383 6.501 5.304c.396.92 1.275 2.892 1.275 2.892s.614-3.944-1.231-8.678z"
        fill="#000"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M126.637 95.599s.087 1.183.527 3.945c.439 2.761.966 5.171.395 7.275s1.494 2.762 2.328 1.534c.835-1.227.352-4.032.176-5.391-.219-1.402-1.142-5.216-1.406-5.873s-.835-2.76-2.02-1.49z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M128.023 77.946l-.879 15.56-11.685-10.388 10.412 11.615-15.596.876 15.596.877-10.412 11.615 11.685-10.388.879 15.603.834-15.603 11.686 10.388-10.411-11.615 15.596-.877-15.596-.876 10.411-11.615-11.686 10.387-.834-15.56zM78.269 81.25l-.66 11.703-8.742-7.8 7.82 8.721-11.73.657 11.73.658-7.82 8.722 8.742-7.802.66 11.703.658-11.703 8.743 7.802-7.82-8.722 11.73-.658-11.73-.657 7.82-8.722-8.743 7.801-.658-11.703z"
        fill="#fff"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M79.618 178.83l-.044 1.008a76.146 76.146 0 01-25.92-5.61l-1.845-.789c5.93-3.024 11.07-8.197 12.872-16.787 5.183-24.807-2.504-39.316-4.7-49.615a21.252 21.252 0 01-.396-2.586c3.426 3.725 7.776 6.575 12.389 8.635 1.757.788 3.558 1.489 5.403 2.016.747.218 1.494.438 2.24.569l1.319.263c1.537 1.666 3.118 3.112 4.524 3.989.615.35 1.186.788 1.757 1.183l2.11 1.447c-3.295 1.84-7.25 4.996-9.006 10.037-.045.131-.089.263-.132.394 0 .044-.044.087-.044.131-.045.088-.045.132-.088.219 0 .044-.044.133-.044.176 0 .044-.044.131-.044.175 0 .087-.044.132-.088.22 0 .043-.044.131-.044.174 0 .044-.044.089-.044.132-.132.395-.264.833-.351 1.272v.087a1.268 1.268 0 00-.088.394v.044c-.044.088-.044.22-.088.307l-.044.22-.043.131c0 .087-.045.175-.045.263l-.088.394-.043.22-.045.218v.044l-.044.263v.439l-.043.262v.044c-.044.132-.044.219-.088.351v.219c-.044.219-.088.394-.132.614v.087l-.044.176-.044.307-.044.131-.044.219-.043.264v.043l-.045.351v.044l-.044.394-.043.394v.132l-.044.351v.175l-.045.35v.088l-.044.263-.043.263-.044.394c-.044.264-.044.483-.088.745v.351c0 .176-.044.395-.044.57v.263l-.044.351c-1.142 11.308 2.109 21.038 1.714 32.127z"
        fill="#9E775C"
      />
    </svg>
  );
};

export const BridgePopup = ({
  onClose,
  onSuccess,
}: {
  onSuccess?: () => void;
  onClose: () => void;
}) => {
  const { showFailure } = useTransactionNotification();

  const renderButtonText = () => {
    if (input1Chain === chainId) {
      return (
        <Button className="my-2" disabled={!isValid} onClick={handleSwap}>
          {" "}
          Transfer
        </Button>
      );
    } else {
      if (input1Chain === 1) {
        return (
          <DarkButton
            className="my-2"
            onClick={() => switchNetwork(input1Chain)}
          >
            Switch to Ethereum <EthereumIcon className="ml-1" />
          </DarkButton>
        );
      } else {
        return (
          <DarkButton
            className="my-2"
            onClick={() => switchNetwork(input1Chain)}
          >
            Switch to Binance <BinanceIcon className="ml-1" />
          </DarkButton>
        );
      }
    }
  };
  const { chainId } = useWeb3Network();
  const { switchNetwork } = useSwitchNetwork();

  const [input1Chain, setInput1Chain] = useState(chainId ? chainId : 1);
  const [input2Chain, setInput2Chain] = useState(
    chainId ? (chainId === 1 ? 56 : 1) : 56
  );
  const [input1, setInput1] = useState("");
  const [input2, setInput2] = useState("");

  const [balance, setBalance] = useState("-");
  const web3 = useWeb3();
  const fetchbalance = async () => {
    let token = await getETHDon(web3);
    if (input1Chain !== chainId) {
      return setBalance("-");
    }
    if (chainId === 1) {
      token = await getETHDon(web3);
    }
    if (chainId === 56) {
      token = await getBSCDon(web3);
    }
    const accounts = await web3.eth.getAccounts();
    const balance = await token.methods.balanceOf(accounts[0]).call();
    setBalance(toEther(balance));
  };

  const [bridgeInfo, setBridgeInfo] = useState<null | typeof ExampleObject>(
    null
  );

  const [step, setStep] = useState<
    "transferring" | "transfersuccess" | "initial"
  >("initial");

  const handleSwap = async () => {
    if (step === "transferring") {
      return;
    }

    setStep("transferring");
    try {
      const accounts = await web3.eth.getAccounts();
      if (input1Chain == 1) {
        let acceptedToken = await getETHDon(web3);
        await acceptedToken.methods
          .transfer(DONETHbridge, web3.utils.toWei(input1))
          .send({ from: accounts[0] });
      }
      if (input1Chain == 56) {
        let BSCbridge = await getDONBSCbridgeContract(web3);
        await BSCbridge.methods
          .Swapout(web3.utils.toWei(input1), accounts[0])
          .send({ from: accounts[0] });
      }

      onSuccess && onSuccess();
      setStep("transfersuccess");
    } catch (err) {
      console.log(err);
      showFailure("Transaction failed.");
      setStep("initial")
    } finally {
      // refetch();
    }
  };

  const fetchBridgeInfo = async () => {
    const resp = await axios.get(
      "https://bridgeapi.anyswap.exchange/v2/serverInfo/56"
    );

    setBridgeInfo(resp.data["donv4"]);
  };

  const interChange = () => {
    setInput1Chain(input2Chain);
    setInput2Chain(input1Chain);
  };
  useDidUpdate(() => {
    handleChange(input1);
  }, [input1Chain, input2Chain]);

  useEffect(() => {
    fetchBridgeInfo();
  }, []);

  useEffect(() => {
    fetchbalance();
  }, [chainId, input1Chain]);
  const classes = useStylesBootstrap();

  const srcToken =
    bridgeInfo !== null
      ? input1Chain === 1
        ? bridgeInfo.SrcToken
        : bridgeInfo.DestToken
      : null;
  const renderToolTip = () => {
    if (!srcToken) {
      return <>...</>;
    }

    // const destToken = input2Chain === 56 ? bridgeInfo.DestToken : bridgeInfo.SrcToken;
    return (
      <div className="p-4">
        <div>
          <div className="d-flex align-items-center justify-content-between mb-2">
            <InfoLabel dark>Max Swap Amount</InfoLabel>
            <InfoLabel className="ml-5">{srcToken.MaximumSwap} DON</InfoLabel>
          </div>
          <div className="d-flex align-items-center justify-content-between mb-2">
            <InfoLabel dark>Min Swap Amount</InfoLabel>
            <InfoLabel className="ml-5">{srcToken.MinimumSwap} DON</InfoLabel>
          </div>
          <div className="d-flex align-items-center justify-content-between mb-2">
            <InfoLabel dark> Swap Fee</InfoLabel>
            <InfoLabel className="ml-5">
              {new BigNumber(srcToken.SwapFeeRate).multipliedBy(100).toFixed(2)}
              %
            </InfoLabel>
          </div>
          <div className="d-flex align-items-center justify-content-between mb-2">
            <InfoLabel dark>Max Fee Amount</InfoLabel>
            <InfoLabel className="ml-5">
              {srcToken.MaximumSwapFee} DON
            </InfoLabel>
          </div>
          <div className="d-flex align-items-center justify-content-between mb-2">
            <InfoLabel dark>Min Fee Amount</InfoLabel>
            <InfoLabel className="ml-5">
              {srcToken.MinimumSwapFee} DON
            </InfoLabel>
          </div>

          <p className="text-center mt-3 mb-0">
            Deposits &gt; 1,300,000 DON could take up to 12 Hours
          </p>
        </div>
      </div>
    );
  };

  const handleChange = (inputval: string) => {
    setInput1(inputval);
    if (srcToken) {
      const feeRate = srcToken.SwapFeeRate;
      const inputBN = new BigNumber(inputval);
      let fee = inputBN.multipliedBy(feeRate);
      if (fee.gte(srcToken.MaximumSwapFee)) {
        fee = new BigNumber(srcToken.MaximumSwapFee);
      } else if (fee.lte(srcToken.MinimumSwapFee)) {
        fee = new BigNumber(srcToken.MinimumSwapFee);
      }
      const calcAmount = new BigNumber(inputval).minus(fee);
      if (calcAmount.lte(0) || inputBN.lt(srcToken.MinimumSwap)) {
        setInput2("");
      } else {
        setInput2(calcAmount.toFixed());
      }
    }
  };

  const isValid = useMemo(() => {
    if (balance === "-") {
      return false;
    }
    if (!srcToken) {
      return false;
    }
    const feeRate = srcToken.SwapFeeRate;
    const inputBN = new BigNumber(input1);
    if (!!!input1) {
      return false;
    }
    if (inputBN.gt(balance)) {
      return false;
    }
    let fee = inputBN.multipliedBy(feeRate);
    if (fee.gte(srcToken.MaximumSwapFee)) {
      fee = new BigNumber(srcToken.MaximumSwapFee);
    } else if (fee.lte(srcToken.MinimumSwapFee)) {
      fee = new BigNumber(srcToken.MinimumSwapFee);
    }
    const calcAmount = new BigNumber(input1).minus(fee);
    if (calcAmount.lte(0) || inputBN.lt(srcToken.MinimumSwap)) {
      return false;
    }
    return true;
  }, [srcToken, input1, balance, chainId]);

  const renderContent = () => {
    if (!bridgeInfo) {
      return <CircularProgress />;
    }
    if (step === "transferring") {
      return <Transfer chainId={input1Chain} />;
    }
    if (step === "transfersuccess") {
      return (
        <>
          <img
            src={BgImage}
            style={{
              position: "absolute",
              zIndex: 0,
              top: 0,
              left: 0,
              right: 0,
            }}
          />

          <div
            style={{
              position: "relative",
              zIndex: 1,
              marginTop: 80,

              textAlign: "center",
            }}
          >
            <DonTokenIcon style={{ marginBottom: 40 }} />
            <h4>Your Transfer is Complete!</h4>
            <p>
              Transferred {input1} DON{" "}
              {input1Chain === 1 ? <EthereumIcon /> : <BinanceIcon />} to{" "}
              {input2} DON{" "}
              {input2Chain !== 56 ? <EthereumIcon /> : <BinanceIcon />}
            </p>
          </div>
        </>
      );
    }
    return (
      <>
        <div>
          <div className="mt-4">
            <div className="d-flex align-items-center justify-content-between">
              <InputLabel>From</InputLabel>
              <InputMaxButton onClick={() => handleChange(balance)}>
                Use MAX
              </InputMaxButton>
            </div>
            <BridgeInput
              icon={<RenderNetworkIcon chainId={input1Chain} />}
              value={input1}
              placeholder="0.0"
              onChange={(e) => handleChange(e.target.value)}
            />
            <InputLabel>
              Balance:{" "}
              {balance !== "-" ? new BigNumber(balance).toFixed(2) : balance}
            </InputLabel>
            <div className="my-2 d-flex justify-content-center mb-4">
              <InterchangeIcon
                style={{ cursor: "pointer" }}
                onClick={interChange}
              />
            </div>
            <BridgeInput
              icon={<RenderNetworkIcon chainId={input2Chain} />}
              value={input2}
              disabled
              placeholder="0.0"
              onChange={(e) => {}}
            />
          </div>

          <ViewLimits className="my-2">
            <Tooltip
              title={renderToolTip()}
              placement="left"
              arrow
              classes={classes}
              interactive
            >
              <span>
                <InfoIcon />
                <span className="ml-1">View Limits</span>
              </span>
            </Tooltip>
          </ViewLimits>

          <div className="d-flex justify-content-center mt-3">
            {renderButtonText()}
          </div>
        </div>
      </>
    );
  };

  return (
    <DonCommonmodal
      title={step === "initial" ? "Exchange" : ""}
      variant="common"
      subtitle={step === "initial" ? "Powered by Anyswap Network" : ""}
      contentStyle={{ padding: 30 }}
      isOpen
      size="xs"
      rounded
      onClose={onClose}
    >
      {renderContent()}
    </DonCommonmodal>
  );
};
