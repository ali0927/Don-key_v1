generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ProtocolActionProperties {
  id          Int     @id @default(autoincrement())
  actionId    Int?
  name        String?
  actionType  Int?
  optionsJSON String?
  description String?
  required    Int?
}

model ProtocolActions {
  id          Int        @id @default(autoincrement())
  protocolId  Int?
  protocols   Protocols? @relation(fields: [protocolId], references: [id])
  name        String?
  description String?
  icon        String?
}

model Protocols {
  id              Int     @id @default(autoincrement())
  name            String?
  website         String?
  toolbarImageURL String?
  showOnToolbar   String?
  edgeColor       String?
  description     String?
  vertexImageURL  String?
  mediumImageURL  String?
  protocolMaps    protocol_proto_map[]
  actions         ProtocolActions[]
}

model Strategies {
  id               Int       @id @default(autoincrement())
  name             String?
  data_open        DateTime?
  earnings         Int?
  earnings_per     Int?
  allocation       Int?
  profit           Int?
  last_transaction Int?
  apy              Int?
  buru_token       Int?
  status           Int?
  createdAt        DateTime
  updatedAt        DateTime
  accountId        Int?
  accounts         accounts? @relation(fields: [accountId], references: [id])

  @@index([accountId], name: "accountId")
}

model Users {
  id            Int       @id @default(autoincrement())
  walletAddress String?   @unique
  created       DateTime?
  lastUpdate    DateTime?
  avatarURL     String?
  username      String?
  description   String?
  GUID          String    @unique
}

model accounts {
  id                Int          @id @default(autoincrement())
  picture           String?
  name              String?
  description       String?
  buru_token_minted Int?
  createdAt         DateTime
  updatedAt         DateTime
  Strategies        Strategies[]
}

model farmers {
  id              Int      @id @default(autoincrement())
  picture         String?
  name            String?
  description     String?
  chart_image_url String?
  apy             String?
  strategies      String?
  nb_farmers      Int?
  budget          Int?
  age             Int?
  buru_token      Int?
  chart_url       String?
  createdAt       DateTime
  updatedAt       DateTime
}

model notifications {
  id           Int      @id @default(autoincrement())
  notification String?
  createdAt    DateTime
  updatedAt    DateTime
}

model numbers {
  id        Int      @id @default(autoincrement())
  number    Int?
  title     String?
  createdAt DateTime
  updatedAt DateTime
}

model yearn_vaults {
  id                    Int      @id @default(autoincrement())
  tokenIcon             String
  symbol                String
  name                  String   @unique
  tokenName             String
  tokenSymbol           String
  strategyName          String
  tokenAddress          String?
  apy_tokenAddress      String?  @map("apy.tokenAddress")
  apy_apyOneMonthSample Float    @map("apy.apyOneMonthSample")
  apy_symbol            String   @map("apy.symbol")
  apy_apyOneWeekSample  Float    @map("apy.apyOneWeekSample")
  apy_description       String   @map("apy.description")
  timestamp             DateTime @default(now())
}

model protocol_proto_map {
  id               Int    @id @default(autoincrement())
  protocol         Protocols  @relation(fields: [protocol_id], references: [id])
  next_protocol    Protocols  @relation(name: "prev",fields: [next_protocol_id], references: [id])
  protocol_id      Int
  next_protocol_id Int
  image            String
}
